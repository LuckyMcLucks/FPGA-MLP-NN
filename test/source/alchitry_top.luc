module alchitry_top (
    input clk,              // 100MHz clock
    input rst_n,            // reset button (active low)
    output led[8],          // 8 user controllable LEDs
    input usb_rx,           // USB->Serial input
    output usb_tx       ,    // USB->Serial output
    output io_led[3][8],
    input io_dip[3][8]

) {
    clk_wiz_0 slow_clock(.clk_in1(clk))
    sig rst                 // reset signal
    
    .clk(slow_clock.clk_out1) {
        // The reset conditioner is used to synchronize the reset signal to the FPGA
        // clock. This ensures the entire FPGA comes out of reset at the same time.
        reset_conditioner reset_cond
        #SIZE(784){
        looping_carry_save adder
            }
    }
    

    always {
        reset_cond.in = ~rst_n  // input raw inverted reset signal
        rst = reset_cond.out    // conditioned reset
        
        adder.array ={16b10, 16b1, -16b10, 16b1, 16b0, -16b1010, 16b101, -16b11, -16b110, -16b1, -16b101, 16b111, 16b110, 16b100, 16b1, -16b1001, -16b1000, 16b110, -16b1, 16b100, -16b1000, -16b1000, 16b10, -16b110, -16b110, 16b0, 16b100, 16b0, -16b10, 16b101, -16b1, -16b11, -16b11, -16b111, -16b11, -16b1000, -16b110, -16b10, 16b0, -16b1010, -16b1000, 16b110, 16b10, 16b10, -16b10, 16b1, 16b1, 16b100, -16b101, 16b10, -16b10, 16b101, 16b100, -16b1001, -16b10, -16b1000, -16b110, 16b110, -16b1001, -16b110, 16b100, 16b101, -16b11, -16b1000, -16b1, 16b10, -16b11, 16b110, 16b0, 16b100, -16b11, -16b110, -16b11, -16b1010, -16b111, -16b11, 16b111, 16b110, 16b101, -16b110, -16b1010, 16b1, -16b10, -16b110, 16b0, 16b100, 16b10, -16b1001, 16b1, 16b11, -16b1000, -16b1000, 16b100, -16b10, 16b10, -16b111, -16b1010, -16b1010, 16b1, -16b1001, 16b10, 16b11, 16b100, -16b1001, 16b10, 16b0, -16b10, -16b11, 16b11, 16b100, -16b100, -16b10, -16b100, 16b0, -16b101, 16b101, 16b110, -16b1, -16b10, -16b1, 16b10, 16b101, 16b110, 16b100, 16b1, -16b100, -16b100, -16b111, 16b110, -16b1010, 16b110, -16b11, 16b110, -16b101, 16b0, -16b110, -16b11, 16b111, -16b1001, -16b111, -16b100, 16b111, 16b11, -16b101, 16b101, -16b1001, -16b11, -16b1010, 16b100, 16b111, -16b111, 16b111, 16b11, 16b101, 16b0, -16b1000, -16b10, 16b11, 16b100, 16b10, -16b11, 16b0, 16b111, -16b1, -16b1, -16b111, 16b101, 16b0, 16b110, 16b101, -16b1, -16b110, 16b100, -16b100, -16b1001, -16b1001, -16b10, -16b1, 16b11, 16b0, 16b1, -16b1000, 16b111, 16b100, -16b10, -16b1001, -16b111, -16b111, 16b110, -16b110, 16b0, -16b10, -16b1000, -16b110, -16b11, 16b11, -16b1000, -16b110, -16b10, -16b100, -16b110, 16b0, -16b1010, -16b101, 16b11, -16b11, 16b10, 16b10, -16b10, -16b10, -16b1010, -16b111, -16b110, 16b10, -16b100, -16b1000, 16b110, 16b1, -16b1001, -16b111, -16b101, -16b101, 16b110, -16b100, 16b100, -16b100, 16b0, 16b110, 16b110, 16b110, 16b100, 16b1, 16b100, -16b1000, 16b11, 16b101, 16b111, 16b100, -16b1010, 16b100, -16b111, 16b11, -16b110, 16b111, 16b110, -16b1001, 16b100, -16b1, 16b110, 16b100, 16b11, 16b0, -16b111, 16b0, 16b101, -16b111, -16b111, 16b101, 16b10, -16b11, 16b11, 16b100, -16b111, -16b1000, 16b110, 16b110, 16b110, -16b10, -16b111, 16b101, 16b111, -16b1001, 16b10, -16b1, -16b111, -16b111, -16b101, 16b111, 16b111, 16b0, 16b1, 16b101, -16b111, -16b1010, 16b10, -16b1001, -16b1, -16b110, -16b1, 16b111, -16b10, 16b11, -16b110, -16b11, -16b1, -16b11, -16b111, 16b101, -16b11, -16b1010, -16b110, -16b110, -16b110, 16b10, -16b101, -16b11, 16b11, -16b1000, -16b1000, -16b101, 16b101, -16b111, 16b111, -16b1001, 16b101, -16b10, 16b101, -16b1001, 16b111, -16b111, -16b100, -16b1, 16b1, -16b10, 16b100, 16b0, 16b101, -16b100, -16b10, -16b1000, -16b1, 16b110, -16b111, 16b101, -16b11, -16b101, 16b111, 16b110, -16b1001, 16b101, -16b1000, 16b110, -16b11, 16b101, 16b10, 16b1, -16b110, 16b1, -16b11, -16b1001, 16b100, -16b101, -16b101, 16b11, -16b110, -16b10, -16b10, 16b0, -16b1, 16b110, -16b1000, 16b1, 16b1, 16b111, 16b110, -16b1010, 16b100, -16b1, -16b101, -16b1010, -16b101, 16b111, 16b100, -16b101, 16b110, -16b1001, -16b1010, 16b10, -16b1001, -16b1000, 16b11, -16b1010, 16b1, 16b100, 16b11, -16b100, 16b110, 16b0, -16b10, -16b111, -16b111, 16b100, -16b111, 16b101, -16b10, -16b111, 16b11, 16b0, -16b1001, -16b111, -16b10, -16b10, -16b1000, 16b101, 16b101, -16b1001, -16b1, 16b111, -16b1, 16b0, -16b10, 16b101, 16b101, -16b11, -16b1, 16b111, 16b10, 16b101, -16b111, 16b1, -16b111, -16b11, -16b1000, 16b1, -16b1, -16b100, -16b111, -16b1, 16b11, 16b100, 16b10, 16b10, -16b1010, -16b1, -16b11, 16b11, 16b10, -16b1, -16b111, 16b0, 16b110, -16b100, 16b0, 16b0, -16b11, 16b0, 16b101, -16b11, 16b111, 16b110, 16b1, -16b111, 16b111, -16b11, 16b0, 16b11, -16b100, -16b10, 16b110, 16b110, -16b1000, -16b100, 16b11, -16b100, 16b0, 16b1, -16b1001, 16b101, 16b10, 16b0, 16b11, 16b1, -16b101, -16b1000, 16b111, -16b1, -16b100, -16b1001, 16b1, 16b11, -16b110, -16b1010, -16b11, -16b110, -16b101, -16b111, 16b111, 16b1, 16b0, -16b11, 16b101, 16b11, 16b11, 16b101, 16b110, -16b1, -16b100, -16b111, 16b1, -16b10, -16b11, 16b10, -16b110, -16b101, 16b0, -16b1010, 16b111, 16b10, -16b1, 16b10, -16b111, 16b111, -16b10, -16b1010, -16b100, -16b100, 16b11, -16b11, 16b100, 16b10, -16b1000, 16b0, 16b0, -16b101, 16b10, -16b100, -16b111, 16b110, -16b1, 16b11, 16b0, 16b0, 16b10, -16b100, -16b1000, -16b111, -16b111, 16b100, -16b110, -16b1000, -16b11, -16b1001, -16b1, 16b101, -16b11, -16b101, -16b1000, -16b101, 16b1, -16b100, 16b101, -16b1, 16b10, 16b110, 16b1, -16b100, 16b10, 16b11, 16b11, 16b100, 16b10, 16b110, -16b1000, -16b110, -16b101, -16b100, -16b100, -16b1000, 16b10, -16b1, -16b11, -16b1000, -16b1, 16b111, -16b100, -16b111, 16b1, -16b111, -16b10, 16b100, 16b100, -16b110, 16b1, -16b100, -16b111, 16b111, -16b1000, -16b101, 16b1, -16b100, -16b110, -16b100, -16b1001, 16b1, -16b110, 16b1, 16b101, -16b1, 16b101, -16b1, 16b100, 16b1, -16b1001, -16b10, 16b110, 16b10, 16b100, 16b110, -16b11, 16b111, -16b100, -16b101, 16b110, -16b101, 16b11, 16b110, -16b100, -16b1010, -16b111, 16b110, -16b11, 16b111, -16b11, 16b111, 16b111, 16b10, -16b101, -16b1001, -16b100, -16b101, -16b1000, 16b100, 16b11, -16b1010, 16b101, 16b11, -16b111, -16b1001, -16b110, -16b1, 16b110, -16b11, -16b110, -16b10, -16b100, 16b11, -16b100, 16b11, 16b100, 16b111, -16b101, -16b101, 16b0, -16b110, -16b10, -16b1001, 16b111, -16b10, -16b101, -16b100, -16b1001, -16b11, -16b1010, -16b1, -16b100, -16b1, -16b111, 16b1, 16b1, -16b100, -16b1001, -16b1001, -16b1001, 16b101, 16b101, 16b1, 16b110, 16b11, 16b10, 16b11, -16b1001, 16b110, -16b10, -16b1000, 16b0, -16b100, -16b1001, -16b111, -16b1, 16b11, 16b111, -16b110, 16b0, -16b10, 16b110, 16b110, -16b10, -16b101, -16b101, -16b1000, -16b111, 16b1, -16b11, -16b1, -16b11, 16b101, -16b101, 16b101, -16b1010, -16b10, 16b0, 16b100, -16b1001, 16b100, -16b11, 16b110, -16b100, -16b110, -16b1, 16b10, -16b1010, 16b110, -16b110, 16b111, -16b100, -16b10, 16b1, -16b11, 16b111, -16b101, 16b0, -16b1010, -16b100, 16b101, -16b100, 16b1, 16b110, 16b0, -16b100, -16b111, -16b11, -16b10, 16b11, -16b100, 16b110, 16b1, 16b111, 16b10, 16b11, 16b111, 16b110, 16b101, 16b1, 16b100, -16b101, 16b110, -16b11, 16b101, 16b1, 16b1, 16b110, 16b10, -16b100, 16b10, -16b101, 16b10, -16b1010, 16b110, 16b10, 16b101, 16b100, -16b100, -16b1000, 16b110, 16b110, -16b100, -16b1, -16b110, -16b110, -16b111, 16b1, 16b111, -16b100, -16b111}
        adder.bias  =-16b100
        adder.start =1
        io_led[1:0]  = {adder.out[15:8],adder.out[7:0]}
        io_led[2] = 0
        led = 8             // turn LEDs off

        usb_tx = usb_rx         // echo the serial data
    }
}