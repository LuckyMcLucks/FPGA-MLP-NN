module looping_carry_save #(
   SIZE = 6 :SIZE> 0
)(
    input clk,  // clock
    signed input array[SIZE][16],
    signed output out[16],
    signed input bias[16],
    output in[16],
    input start,
    output ready
) {
    .clk(clk) {
        // The reset conditioner is used to synchronize the reset signal to the FPGA
        // clock. This ensures the entire FPGA comes out of reset at the same time.
        
        dff index[$clog2(SIZE+1)]
        signed dff total[16]
    //    edge_detector clk_edge 
       // pulse_extender clk_extended(#MIN_PULSE_TIME_NS(20),#CLK_FREQ(100000000)) 
    } 
    

    always {
        out =total.q+ bias
        ready = 0
        in=index.q
        if (start){
        if (index.q<SIZE){
        total.d = total.q + array[index.q]
        index.d = index.q +1
        }else{
               ready=1
            total.d = total.q
            
            }
            
            
             
        }
        

    }
}