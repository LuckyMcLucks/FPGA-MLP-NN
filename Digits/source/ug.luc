testbench ug {
    sig clk

    fun tick_clock() {
        clk = 1
        $silent_tick() // tick without capturing signals
        clk = 0
        $tick()
    }
    const AL = {16b10, 16b1, -16b10, 16b1, 16b0, -16b1010, 16b101, -16b11, -16b110, -16b1, -16b101, 16b111, 16b110, 16b100, 16b1, -16b1001, -16b1000, 16b110, -16b1, 16b100, -16b1000, -16b1000, 16b10, -16b110, -16b110, 16b0, 16b100, 16b0, -16b10, 16b101, -16b1, -16b11, -16b11, -16b111, -16b11, -16b1000, -16b110, -16b10, 16b0, -16b1010, -16b1000, 16b110, 16b10, 16b10, -16b10, 16b1, 16b1, 16b100, -16b101, 16b10, -16b10, 16b101, 16b100, -16b1001, -16b10, -16b1000, -16b110, 16b110, -16b1001, -16b110, 16b100, 16b101, -16b11, -16b1000, -16b1, 16b10, -16b11, 16b110, 16b0, 16b100, -16b11, -16b110, -16b11, -16b1010, -16b111, -16b11, 16b111, 16b110, 16b101, -16b110, -16b1010, 16b1, -16b10, -16b110, 16b0, 16b100, 16b10, -16b1001, 16b1, 16b11, -16b1000, -16b1000, 16b100, -16b10, 16b10, -16b111, -16b1010, -16b1010, 16b1, -16b1001, 16b10, 16b11, 16b100, -16b1001, 16b10, 16b0, -16b10, -16b11, 16b11, 16b100, -16b100, -16b10, -16b100, 16b0, -16b101, 16b101, 16b110, -16b1, -16b10, -16b1, 16b10, 16b101, 16b110, 16b100, 16b1, -16b100, -16b100, -16b111, 16b110, -16b1010, 16b110, -16b11, 16b110, -16b101, 16b0, -16b110, -16b11, 16b111, -16b1001, -16b111, -16b100, 16b111, 16b11, -16b101, 16b101, -16b1001, -16b11, -16b1010, 16b100, 16b111, -16b111, 16b111, 16b11, 16b101, 16b0, -16b1000, -16b10, 16b11, 16b100, 16b10, -16b11, 16b0, 16b111, -16b1, -16b1, -16b111, 16b101, 16b0, 16b110, 16b101, -16b1, -16b110, 16b100, -16b100, -16b1001, -16b1001, -16b10, -16b1, 16b11, 16b0, 16b1, -16b1000, 16b111, 16b100, -16b10, -16b1001, -16b111, -16b111, 16b110, -16b110, 16b0, -16b10, -16b1000, -16b110, -16b11, 16b11, -16b1000, -16b110, -16b10, -16b100, -16b110, 16b0, -16b1010, -16b101, 16b11, -16b11, 16b10, 16b10, -16b10, -16b10, -16b1010, -16b111, -16b110, 16b10, -16b100, -16b1000, 16b110, 16b1, -16b1001, -16b111, -16b101, -16b101, 16b110, -16b100, 16b100, -16b100, 16b0, 16b110, 16b110, 16b110, 16b100, 16b1, 16b100, -16b1000, 16b11, 16b101, 16b111, 16b100, -16b1010, 16b100, -16b111, 16b11, -16b110, 16b111, 16b110, -16b1001, 16b100, -16b1, 16b110, 16b100, 16b11, 16b0, -16b111, 16b0, 16b101, -16b111, -16b111, 16b101, 16b10, -16b11, 16b11, 16b100, -16b111, -16b1000, 16b110, 16b110, 16b110, -16b10, -16b111, 16b101, 16b111, -16b1001, 16b10, -16b1, -16b111, -16b111, -16b101, 16b111, 16b111, 16b0, 16b1, 16b101, -16b111, -16b1010, 16b10, -16b1001, -16b1, -16b110, -16b1, 16b111, -16b10, 16b11, -16b110, -16b11, -16b1, -16b11, -16b111, 16b101, -16b11, -16b1010, -16b110, -16b110, -16b110, 16b10, -16b101, -16b11, 16b11, -16b1000, -16b1000, -16b101, 16b101, -16b111, 16b111, -16b1001, 16b101, -16b10, 16b101, -16b1001, 16b111, -16b111, -16b100, -16b1, 16b1, -16b10, 16b100, 16b0, 16b101, -16b100, -16b10, -16b1000, -16b1, 16b110, -16b111, 16b101, -16b11, -16b101, 16b111, 16b110, -16b1001, 16b101, -16b1000, 16b110, -16b11, 16b101, 16b10, 16b1, -16b110, 16b1, -16b11, -16b1001, 16b100, -16b101, -16b101, 16b11, -16b110, -16b10, -16b10, 16b0, -16b1, 16b110, -16b1000, 16b1, 16b1, 16b111, 16b110, -16b1010, 16b100, -16b1, -16b101, -16b1010, -16b101, 16b111, 16b100, -16b101, 16b110, -16b1001, -16b1010, 16b10, -16b1001, -16b1000, 16b11, -16b1010, 16b1, 16b100, 16b11, -16b100, 16b110, 16b0, -16b10, -16b111, -16b111, 16b100, -16b111, 16b101, -16b10, -16b111, 16b11, 16b0, -16b1001, -16b111, -16b10, -16b10, -16b1000, 16b101, 16b101, -16b1001, -16b1, 16b111, -16b1, 16b0, -16b10, 16b101, 16b101, -16b11, -16b1, 16b111, 16b10, 16b101, -16b111, 16b1, -16b111, -16b11, -16b1000, 16b1, -16b1, -16b100, -16b111, -16b1, 16b11, 16b100, 16b10, 16b10, -16b1010, -16b1, -16b11, 16b11, 16b10, -16b1, -16b111, 16b0, 16b110, -16b100, 16b0, 16b0, -16b11, 16b0, 16b101, -16b11, 16b111, 16b110, 16b1, -16b111, 16b111, -16b11, 16b0, 16b11, -16b100, -16b10, 16b110, 16b110, -16b1000, -16b100, 16b11, -16b100, 16b0, 16b1, -16b1001, 16b101, 16b10, 16b0, 16b11, 16b1, -16b101, -16b1000, 16b111, -16b1, -16b100, -16b1001, 16b1, 16b11, -16b110, -16b1010, -16b11, -16b110, -16b101, -16b111, 16b111, 16b1, 16b0, -16b11, 16b101, 16b11, 16b11, 16b101, 16b110, -16b1, -16b100, -16b111, 16b1, -16b10, -16b11, 16b10, -16b110, -16b101, 16b0, -16b1010, 16b111, 16b10, -16b1, 16b10, -16b111, 16b111, -16b10, -16b1010, -16b100, -16b100, 16b11, -16b11, 16b100, 16b10, -16b1000, 16b0, 16b0, -16b101, 16b10, -16b100, -16b111, 16b110, -16b1, 16b11, 16b0, 16b0, 16b10, -16b100, -16b1000, -16b111, -16b111, 16b100, -16b110, -16b1000, -16b11, -16b1001, -16b1, 16b101, -16b11, -16b101, -16b1000, -16b101, 16b1, -16b100, 16b101, -16b1, 16b10, 16b110, 16b1, -16b100, 16b10, 16b11, 16b11, 16b100, 16b10, 16b110, -16b1000, -16b110, -16b101, -16b100, -16b100, -16b1000, 16b10, -16b1, -16b11, -16b1000, -16b1, 16b111, -16b100, -16b111, 16b1, -16b111, -16b10, 16b100, 16b100, -16b110, 16b1, -16b100, -16b111, 16b111, -16b1000, -16b101, 16b1, -16b100, -16b110, -16b100, -16b1001, 16b1, -16b110, 16b1, 16b101, -16b1, 16b101, -16b1, 16b100, 16b1, -16b1001, -16b10, 16b110, 16b10, 16b100, 16b110, -16b11, 16b111, -16b100, -16b101, 16b110, -16b101, 16b11, 16b110, -16b100, -16b1010, -16b111, 16b110, -16b11, 16b111, -16b11, 16b111, 16b111, 16b10, -16b101, -16b1001, -16b100, -16b101, -16b1000, 16b100, 16b11, -16b1010, 16b101, 16b11, -16b111, -16b1001, -16b110, -16b1, 16b110, -16b11, -16b110, -16b10, -16b100, 16b11, -16b100, 16b11, 16b100, 16b111, -16b101, -16b101, 16b0, -16b110, -16b10, -16b1001, 16b111, -16b10, -16b101, -16b100, -16b1001, -16b11, -16b1010, -16b1, -16b100, -16b1, -16b111, 16b1, 16b1, -16b100, -16b1001, -16b1001, -16b1001, 16b101, 16b101, 16b1, 16b110, 16b11, 16b10, 16b11, -16b1001, 16b110, -16b10, -16b1000, 16b0, -16b100, -16b1001, -16b111, -16b1, 16b11, 16b111, -16b110, 16b0, -16b10, 16b110, 16b110, -16b10, -16b101, -16b101, -16b1000, -16b111, 16b1, -16b11, -16b1, -16b11, 16b101, -16b101, 16b101, -16b1010, -16b10, 16b0, 16b100, -16b1001, 16b100, -16b11, 16b110, -16b100, -16b110, -16b1, 16b10, -16b1010, 16b110, -16b110, 16b111, -16b100, -16b10, 16b1, -16b11, 16b111, -16b101, 16b0, -16b1010, -16b100, 16b101, -16b100, 16b1, 16b110, 16b0, -16b100, -16b111, -16b11, -16b10, 16b11, -16b100, 16b110, 16b1, 16b111, 16b10, 16b11, 16b111, 16b110, 16b101, 16b1, 16b100, -16b101, 16b110, -16b11, 16b101, 16b1, 16b1, 16b110, 16b10, -16b100, 16b10, -16b101, 16b10, -16b1010, 16b110, 16b10, 16b101, 16b100, -16b100, -16b1000, 16b110, 16b110, -16b100, -16b1, -16b110, -16b110, -16b111, 16b1, 16b111, -16b100, -16b111}
    looping_carry_save adder(.clk(clk),#SIZE(784))
    test myTest {
        adder.array = AL
        adder.bias =-16b100
        adder.start = 1
        clk = 0 // initialize the value
        $tick_clock() // capture initial state
        repeat(785){
            $tick_clock()
        }
        $print(adder.out)

        // test goes here
    }
}