
*** Running vivado
    with args -log alchitry_top.vdi -applog -m64 -product Vivado -messageDb vivado.pb -mode batch -source alchitry_top.tcl -notrace


ECHO is off.
ECHO is off.

****** Vivado v2023.2 (64-bit)
  **** SW Build 4029153 on Fri Oct 13 20:14:34 MDT 2023
  **** IP Build 4028589 on Sat Oct 14 00:45:43 MDT 2023
  **** SharedData Build 4025554 on Tue Oct 10 17:18:54 MDT 2023
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

source alchitry_top.tcl -notrace
create_project: Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 473.941 ; gain = 182.309
Command: link_design -top alchitry_top -part xc7a35tftg256-1
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Device 21-403] Loading part xc7a35tftg256-1
INFO: [Project 1-454] Reading design checkpoint 'c:/Users/weiya/OneDrive/Desktop/Github/Assembly-AI/Digits/build/vivado/Digits.gen/sources_1/ip/clk_wiz_1/clk_wiz_1.dcp' for cell 'slow_clock'
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.345 . Memory (MB): peak = 933.113 ; gain = 0.000
INFO: [Netlist 29-17] Analyzing 4440 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2023.2
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [c:/Users/weiya/OneDrive/Desktop/Github/Assembly-AI/Digits/build/vivado/Digits.gen/sources_1/ip/clk_wiz_1/clk_wiz_1_board.xdc] for cell 'slow_clock/inst'
Finished Parsing XDC File [c:/Users/weiya/OneDrive/Desktop/Github/Assembly-AI/Digits/build/vivado/Digits.gen/sources_1/ip/clk_wiz_1/clk_wiz_1_board.xdc] for cell 'slow_clock/inst'
Parsing XDC File [c:/Users/weiya/OneDrive/Desktop/Github/Assembly-AI/Digits/build/vivado/Digits.gen/sources_1/ip/clk_wiz_1/clk_wiz_1.xdc] for cell 'slow_clock/inst'
INFO: [Timing 38-35] Done setting XDC timing constraints. [c:/Users/weiya/OneDrive/Desktop/Github/Assembly-AI/Digits/build/vivado/Digits.gen/sources_1/ip/clk_wiz_1/clk_wiz_1.xdc:54]
INFO: [Timing 38-2] Deriving generated clocks [c:/Users/weiya/OneDrive/Desktop/Github/Assembly-AI/Digits/build/vivado/Digits.gen/sources_1/ip/clk_wiz_1/clk_wiz_1.xdc:54]
get_clocks: Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1661.543 ; gain = 596.012
Finished Parsing XDC File [c:/Users/weiya/OneDrive/Desktop/Github/Assembly-AI/Digits/build/vivado/Digits.gen/sources_1/ip/clk_wiz_1/clk_wiz_1.xdc] for cell 'slow_clock/inst'
Parsing XDC File [C:/Users/weiya/OneDrive/Desktop/Github/Assembly-AI/Digits/build/constraint/alchitry.xdc]
CRITICAL WARNING: [Constraints 18-1055] Clock 'clk_0' completely overrides clock 'clk', which is referenced by one or more other constraints. Any constraints that refer to the overridden clock will be ignored.
New: create_clock -period 10.000 -name clk_0 -waveform {0.000 5.000} [get_ports clk], [C:/Users/weiya/OneDrive/Desktop/Github/Assembly-AI/Digits/build/constraint/alchitry.xdc:4]
Previous: create_clock -period 10.000 [get_ports clk], [c:/Users/weiya/OneDrive/Desktop/Github/Assembly-AI/Digits/build/vivado/Digits.gen/sources_1/ip/clk_wiz_1/clk_wiz_1.xdc:53]
Resolution: Review the constraint files and remove the redundant clock definition(s). If the clock constraints are not saved in a file, you can first save the constraints to an XDC file and reload the design once the constraints have been corrected.
INFO: [Timing 38-2] Deriving generated clocks [C:/Users/weiya/OneDrive/Desktop/Github/Assembly-AI/Digits/build/constraint/alchitry.xdc:5]
Finished Parsing XDC File [C:/Users/weiya/OneDrive/Desktop/Github/Assembly-AI/Digits/build/constraint/alchitry.xdc]
Parsing XDC File [C:/Users/weiya/OneDrive/Desktop/Github/Assembly-AI/Digits/build/constraint/au_props.xdc]
Finished Parsing XDC File [C:/Users/weiya/OneDrive/Desktop/Github/Assembly-AI/Digits/build/constraint/au_props.xdc]
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.009 . Memory (MB): peak = 1665.586 ; gain = 0.000
INFO: [Project 1-111] Unisim Transformation Summary:
No Unisim elements were transformed.

The system cannot find the path specified.
11 Infos, 0 Warnings, 1 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:29 ; elapsed = 01:19:20 . Memory (MB): peak = 1665.586 ; gain = 1177.352
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7a35t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a35t'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:02 ; elapsed = 00:00:02 . Memory (MB): peak = 1665.586 ; gain = 0.000

Starting Cache Timing Information Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Cache Timing Information Task | Checksum: 21e210ad1

Time (s): cpu = 00:00:03 ; elapsed = 00:00:01 . Memory (MB): peak = 1677.215 ; gain = 11.629

Starting Logic Optimization Task

Phase 1 Initialization

Phase 1.1 Core Generation And Design Setup
Phase 1.1 Core Generation And Design Setup | Checksum: 21e210ad1

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.010 . Memory (MB): peak = 2040.980 ; gain = 0.000

Phase 1.2 Setup Constraints And Sort Netlist
Phase 1.2 Setup Constraints And Sort Netlist | Checksum: 21e210ad1

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.027 . Memory (MB): peak = 2040.980 ; gain = 0.000
Phase 1 Initialization | Checksum: 21e210ad1

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.032 . Memory (MB): peak = 2040.980 ; gain = 0.000

Phase 2 Timer Update And Timing Data Collection

Phase 2.1 Timer Update
Phase 2.1 Timer Update | Checksum: 21e210ad1

Time (s): cpu = 00:00:02 ; elapsed = 00:00:00.762 . Memory (MB): peak = 2040.980 ; gain = 0.000

Phase 2.2 Timing Data Collection
Phase 2.2 Timing Data Collection | Checksum: 21e210ad1

Time (s): cpu = 00:00:02 ; elapsed = 00:00:00.815 . Memory (MB): peak = 2040.980 ; gain = 0.000
Phase 2 Timer Update And Timing Data Collection | Checksum: 21e210ad1

Time (s): cpu = 00:00:02 ; elapsed = 00:00:00.820 . Memory (MB): peak = 2040.980 ; gain = 0.000

Phase 3 Retarget
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 3 Retarget | Checksum: 2a756c806

Time (s): cpu = 00:00:02 ; elapsed = 00:00:01 . Memory (MB): peak = 2040.980 ; gain = 0.000
Retarget | Checksum: 2a756c806
INFO: [Opt 31-389] Phase Retarget created 0 cells and removed 10 cells
INFO: [Opt 31-1021] In phase Retarget, 1 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 4 Constant propagation
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Phase 4 Constant propagation | Checksum: 260f09777

Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 2040.980 ; gain = 0.000
Constant propagation | Checksum: 260f09777
INFO: [Opt 31-389] Phase Constant propagation created 1078 cells and removed 1976 cells

Phase 5 Sweep
Phase 5 Sweep | Checksum: 242aa19d2

Time (s): cpu = 00:00:04 ; elapsed = 00:00:03 . Memory (MB): peak = 2040.980 ; gain = 0.000
Sweep | Checksum: 242aa19d2
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 0 cells

Phase 6 BUFG optimization
Phase 6 BUFG optimization | Checksum: 242aa19d2

Time (s): cpu = 00:00:04 ; elapsed = 00:00:03 . Memory (MB): peak = 2040.980 ; gain = 0.000
BUFG optimization | Checksum: 242aa19d2
INFO: [Opt 31-662] Phase BUFG optimization created 0 cells of which 0 are BUFGs and removed 0 cells.

Phase 7 Shift Register Optimization
INFO: [Opt 31-1064] SRL Remap converted 0 SRLs to 0 registers and converted 0 registers of register chains to 0 SRLs
Phase 7 Shift Register Optimization | Checksum: 242aa19d2

Time (s): cpu = 00:00:04 ; elapsed = 00:00:03 . Memory (MB): peak = 2040.980 ; gain = 0.000
Shift Register Optimization | Checksum: 242aa19d2
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Phase 8 Post Processing Netlist
Phase 8 Post Processing Netlist | Checksum: 242aa19d2

Time (s): cpu = 00:00:04 ; elapsed = 00:00:03 . Memory (MB): peak = 2040.980 ; gain = 0.000
Post Processing Netlist | Checksum: 242aa19d2
INFO: [Opt 31-389] Phase Post Processing Netlist created 0 cells and removed 0 cells

Phase 9 Finalization

Phase 9.1 Finalizing Design Cores and Updating Shapes
Phase 9.1 Finalizing Design Cores and Updating Shapes | Checksum: 1accc1df0

Time (s): cpu = 00:00:06 ; elapsed = 00:00:04 . Memory (MB): peak = 2040.980 ; gain = 0.000

Phase 9.2 Verifying Netlist Connectivity

Starting Connectivity Check Task

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.055 . Memory (MB): peak = 2040.980 ; gain = 0.000
Phase 9.2 Verifying Netlist Connectivity | Checksum: 1accc1df0

Time (s): cpu = 00:00:06 ; elapsed = 00:00:04 . Memory (MB): peak = 2040.980 ; gain = 0.000
Phase 9 Finalization | Checksum: 1accc1df0

Time (s): cpu = 00:00:06 ; elapsed = 00:00:04 . Memory (MB): peak = 2040.980 ; gain = 0.000
Opt_design Change Summary
=========================


-------------------------------------------------------------------------------------------------------------------------
|  Phase                        |  #Cells created  |  #Cells Removed  |  #Constrained objects preventing optimizations  |
-------------------------------------------------------------------------------------------------------------------------
|  Retarget                     |               0  |              10  |                                              1  |
|  Constant propagation         |            1078  |            1976  |                                              0  |
|  Sweep                        |               0  |               0  |                                              0  |
|  BUFG optimization            |               0  |               0  |                                              0  |
|  Shift Register Optimization  |               0  |               0  |                                              0  |
|  Post Processing Netlist      |               0  |               0  |                                              0  |
-------------------------------------------------------------------------------------------------------------------------


Ending Logic Optimization Task | Checksum: 1accc1df0

Time (s): cpu = 00:00:06 ; elapsed = 00:00:04 . Memory (MB): peak = 2040.980 ; gain = 0.000
INFO: [Constraints 18-11670] Building netlist checker database with flags, 0x8
Done building netlist checker database: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.010 . Memory (MB): peak = 2040.980 ; gain = 0.000

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
Ending Power Optimization Task | Checksum: 1accc1df0

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.037 . Memory (MB): peak = 2040.980 ; gain = 0.000

Starting Final Cleanup Task
Ending Final Cleanup Task | Checksum: 1accc1df0

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.004 . Memory (MB): peak = 2040.980 ; gain = 0.000

Starting Netlist Obfuscation Task
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.005 . Memory (MB): peak = 2040.980 ; gain = 0.000
Ending Netlist Obfuscation Task | Checksum: 1accc1df0

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.009 . Memory (MB): peak = 2040.980 ; gain = 0.000
INFO: [Common 17-83] Releasing license: Implementation
30 Infos, 0 Warnings, 1 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:00:14 ; elapsed = 00:00:12 . Memory (MB): peak = 2040.980 ; gain = 375.395
INFO: [runtcl-4] Executing : report_drc -file alchitry_top_drc_opted.rpt -pb alchitry_top_drc_opted.pb -rpx alchitry_top_drc_opted.rpx
Command: report_drc -file alchitry_top_drc_opted.rpt -pb alchitry_top_drc_opted.pb -rpx alchitry_top_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 2-168] The results of DRC are in file C:/Users/weiya/OneDrive/Desktop/Github/Assembly-AI/Digits/build/vivado/Digits.runs/impl_1/alchitry_top_drc_opted.rpt.
report_drc completed successfully
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Timing 38-480] Writing timing data to binary archive.
Wrote PlaceDB: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.009 . Memory (MB): peak = 2040.980 ; gain = 0.000
Wrote PulsedLatchDB: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.002 . Memory (MB): peak = 2040.980 ; gain = 0.000
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Wrote RouteStorage: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.071 . Memory (MB): peak = 2040.980 ; gain = 0.000
Wrote Netlist Cache: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.001 . Memory (MB): peak = 2040.980 ; gain = 0.000
Wrote Device Cache: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.012 . Memory (MB): peak = 2040.980 ; gain = 0.000
Write Physdb Complete: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.111 . Memory (MB): peak = 2040.980 ; gain = 0.000
Write ShapeDB Complete: Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.152 . Memory (MB): peak = 2040.980 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/Users/weiya/OneDrive/Desktop/Github/Assembly-AI/Digits/build/vivado/Digits.runs/impl_1/alchitry_top_opt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:07 ; elapsed = 00:00:05 . Memory (MB): peak = 2040.980 ; gain = 0.000
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7a35t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a35t'
INFO: [Common 17-83] Releasing license: Implementation
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 2 CPUs

Starting Placer Task

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.006 . Memory (MB): peak = 2040.980 ; gain = 0.000
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 1a8fd3c13

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.015 . Memory (MB): peak = 2040.980 ; gain = 0.000
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.005 . Memory (MB): peak = 2040.980 ; gain = 0.000

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: 3e90797d

Time (s): cpu = 00:00:02 ; elapsed = 00:00:00.958 . Memory (MB): peak = 2040.980 ; gain = 0.000

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: cc0d5a7c

Time (s): cpu = 00:00:10 ; elapsed = 00:00:06 . Memory (MB): peak = 2083.375 ; gain = 42.395

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: cc0d5a7c

Time (s): cpu = 00:00:10 ; elapsed = 00:00:06 . Memory (MB): peak = 2083.375 ; gain = 42.395
Phase 1 Placer Initialization | Checksum: cc0d5a7c

Time (s): cpu = 00:00:10 ; elapsed = 00:00:06 . Memory (MB): peak = 2083.375 ; gain = 42.395

Phase 2 Global Placement

Phase 2.1 Floorplanning
Phase 2.1 Floorplanning | Checksum: 949d0ef5

Time (s): cpu = 00:00:13 ; elapsed = 00:00:08 . Memory (MB): peak = 2083.375 ; gain = 42.395

Phase 2.2 Update Timing before SLR Path Opt
Phase 2.2 Update Timing before SLR Path Opt | Checksum: f0a5bbfd

Time (s): cpu = 00:00:14 ; elapsed = 00:00:09 . Memory (MB): peak = 2083.375 ; gain = 42.395

Phase 2.3 Post-Processing in Floorplanning
Phase 2.3 Post-Processing in Floorplanning | Checksum: f0a5bbfd

Time (s): cpu = 00:00:15 ; elapsed = 00:00:09 . Memory (MB): peak = 2083.375 ; gain = 42.395

Phase 2.4 Global Placement Core

Phase 2.4.1 UpdateTiming Before Physical Synthesis
Phase 2.4.1 UpdateTiming Before Physical Synthesis | Checksum: 11273e75a

Time (s): cpu = 00:00:32 ; elapsed = 00:00:19 . Memory (MB): peak = 2083.375 ; gain = 42.395

Phase 2.4.2 Physical Synthesis In Placer
INFO: [Physopt 32-1035] Found 0 LUTNM shape to break, 752 LUT instances to create LUTNM shape
INFO: [Physopt 32-1044] Break lutnm for timing: one critical 0, two critical 0, total 0, new lutff created 0
INFO: [Physopt 32-1138] End 1 Pass. Optimized 344 nets or LUTs. Breaked 0 LUT, combined 344 existing LUTs and moved 0 existing LUT
INFO: [Physopt 32-65] No nets found for high-fanout optimization.
INFO: [Physopt 32-232] Optimized 0 net. Created 0 new instance.
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-670] No setup violation found.  DSP Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register to Pipeline Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  BRAM Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  URAM Register Optimization was not performed.
INFO: [Physopt 32-949] No candidate nets found for dynamic/static region interface net replication
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.006 . Memory (MB): peak = 2083.375 ; gain = 0.000

Summary of Physical Synthesis Optimizations
============================================


-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  Optimization                                     |  Added Cells  |  Removed Cells  |  Optimized Cells/Nets  |  Dont Touch  |  Iterations  |  Elapsed   |
-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  LUT Combining                                    |            0  |            344  |                   344  |           0  |           1  |  00:00:01  |
|  Retime                                           |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Very High Fanout                                 |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  DSP Register                                     |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register to Pipeline                       |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register                                   |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  BRAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  URAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Dynamic/Static Region Interface Net Replication  |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Total                                            |            0  |            344  |                   344  |           0  |           4  |  00:00:01  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------


Phase 2.4.2 Physical Synthesis In Placer | Checksum: fb923e05

Time (s): cpu = 00:00:36 ; elapsed = 00:00:22 . Memory (MB): peak = 2083.375 ; gain = 42.395
Phase 2.4 Global Placement Core | Checksum: 2353a0d8b

Time (s): cpu = 00:00:36 ; elapsed = 00:00:22 . Memory (MB): peak = 2083.375 ; gain = 42.395
Phase 2 Global Placement | Checksum: 2353a0d8b

Time (s): cpu = 00:00:37 ; elapsed = 00:00:22 . Memory (MB): peak = 2083.375 ; gain = 42.395

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 2414fb7d8

Time (s): cpu = 00:00:39 ; elapsed = 00:00:24 . Memory (MB): peak = 2083.375 ; gain = 42.395

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 1d42a095a

Time (s): cpu = 00:00:46 ; elapsed = 00:00:28 . Memory (MB): peak = 2083.375 ; gain = 42.395

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: 1d0b99ca3

Time (s): cpu = 00:00:46 ; elapsed = 00:00:28 . Memory (MB): peak = 2083.375 ; gain = 42.395

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: 19fb135d0

Time (s): cpu = 00:00:46 ; elapsed = 00:00:29 . Memory (MB): peak = 2083.375 ; gain = 42.395

Phase 3.5 Small Shape Detail Placement
Phase 3.5 Small Shape Detail Placement | Checksum: 16233d329

Time (s): cpu = 00:00:51 ; elapsed = 00:00:33 . Memory (MB): peak = 2083.375 ; gain = 42.395

Phase 3.6 Re-assign LUT pins
Phase 3.6 Re-assign LUT pins | Checksum: 1100d7d09

Time (s): cpu = 00:00:52 ; elapsed = 00:00:34 . Memory (MB): peak = 2083.375 ; gain = 42.395

Phase 3.7 Pipeline Register Optimization
Phase 3.7 Pipeline Register Optimization | Checksum: 1ce3615ae

Time (s): cpu = 00:00:52 ; elapsed = 00:00:34 . Memory (MB): peak = 2083.375 ; gain = 42.395
Phase 3 Detail Placement | Checksum: 1ce3615ae

Time (s): cpu = 00:00:52 ; elapsed = 00:00:35 . Memory (MB): peak = 2083.375 ; gain = 42.395

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: 190987966

Phase 4.1.1.1 BUFG Insertion

Starting Physical Synthesis Task

Phase 1 Physical Synthesis Initialization
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 2 CPUs
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=82.747 | TNS=0.000 |
Phase 1 Physical Synthesis Initialization | Checksum: df983bca

Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.748 . Memory (MB): peak = 2084.789 ; gain = 0.000
INFO: [Place 46-56] BUFG insertion identified 0 candidate nets. Inserted BUFG: 0, Replicated BUFG Driver: 0, Skipped due to Placement/Routing Conflicts: 0, Skipped due to Timing Degradation: 0, Skipped due to netlist editing failed: 0.
Ending Physical Synthesis Task | Checksum: df983bca

Time (s): cpu = 00:00:01 ; elapsed = 00:00:01 . Memory (MB): peak = 2084.789 ; gain = 0.000
Phase 4.1.1.1 BUFG Insertion | Checksum: 190987966

Time (s): cpu = 00:01:02 ; elapsed = 00:00:42 . Memory (MB): peak = 2084.789 ; gain = 43.809

Phase 4.1.1.2 Post Placement Timing Optimization
INFO: [Place 30-746] Post Placement Timing Summary WNS=82.747. For the most accurate timing information please run report_timing.
Phase 4.1.1.2 Post Placement Timing Optimization | Checksum: 14abe9711

Time (s): cpu = 00:01:04 ; elapsed = 00:00:43 . Memory (MB): peak = 2084.789 ; gain = 43.809

Time (s): cpu = 00:01:04 ; elapsed = 00:00:43 . Memory (MB): peak = 2084.789 ; gain = 43.809
Phase 4.1 Post Commit Optimization | Checksum: 14abe9711

Time (s): cpu = 00:01:04 ; elapsed = 00:00:43 . Memory (MB): peak = 2084.789 ; gain = 43.809

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 14abe9711

Time (s): cpu = 00:01:05 ; elapsed = 00:00:44 . Memory (MB): peak = 2084.789 ; gain = 43.809

Phase 4.3 Placer Reporting

Phase 4.3.1 Print Estimated Congestion
INFO: [Place 30-612] Post-Placement Estimated Congestion 
 ____________________________________________________
|           | Global Congestion | Short Congestion  |
| Direction | Region Size       | Region Size       |
|___________|___________________|___________________|
|      North|                1x1|                2x2|
|___________|___________________|___________________|
|      South|                1x1|                2x2|
|___________|___________________|___________________|
|       East|                1x1|                1x1|
|___________|___________________|___________________|
|       West|                1x1|                1x1|
|___________|___________________|___________________|

Phase 4.3.1 Print Estimated Congestion | Checksum: 14abe9711

Time (s): cpu = 00:01:05 ; elapsed = 00:00:44 . Memory (MB): peak = 2084.789 ; gain = 43.809
Phase 4.3 Placer Reporting | Checksum: 14abe9711

Time (s): cpu = 00:01:05 ; elapsed = 00:00:44 . Memory (MB): peak = 2084.789 ; gain = 43.809

Phase 4.4 Final Placement Cleanup
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.013 . Memory (MB): peak = 2084.789 ; gain = 0.000

Time (s): cpu = 00:01:05 ; elapsed = 00:00:44 . Memory (MB): peak = 2084.789 ; gain = 43.809
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 21b77b5da

Time (s): cpu = 00:01:06 ; elapsed = 00:00:45 . Memory (MB): peak = 2084.789 ; gain = 43.809
Ending Placer Task | Checksum: 1ac8278b6

Time (s): cpu = 00:01:06 ; elapsed = 00:00:45 . Memory (MB): peak = 2084.789 ; gain = 43.809
65 Infos, 0 Warnings, 1 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:01:08 ; elapsed = 00:00:46 . Memory (MB): peak = 2084.789 ; gain = 43.809
INFO: [runtcl-4] Executing : report_io -file alchitry_top_io_placed.rpt
report_io: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.191 . Memory (MB): peak = 2084.789 ; gain = 0.000
INFO: [runtcl-4] Executing : report_utilization -file alchitry_top_utilization_placed.rpt -pb alchitry_top_utilization_placed.pb
INFO: [runtcl-4] Executing : report_control_sets -verbose -file alchitry_top_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.030 . Memory (MB): peak = 2084.789 ; gain = 0.000
INFO: [Timing 38-480] Writing timing data to binary archive.
Write ShapeDB Complete: Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.308 . Memory (MB): peak = 2097.508 ; gain = 3.938
Wrote PlaceDB: Time (s): cpu = 00:00:11 ; elapsed = 00:00:05 . Memory (MB): peak = 2097.508 ; gain = 0.000
Wrote PulsedLatchDB: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2097.508 ; gain = 0.000
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Wrote RouteStorage: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.089 . Memory (MB): peak = 2097.508 ; gain = 0.000
Wrote Netlist Cache: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.079 . Memory (MB): peak = 2097.508 ; gain = 0.000
Wrote Device Cache: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.018 . Memory (MB): peak = 2097.508 ; gain = 0.000
Write Physdb Complete: Time (s): cpu = 00:00:11 ; elapsed = 00:00:05 . Memory (MB): peak = 2097.508 ; gain = 3.938
INFO: [Common 17-1381] The checkpoint 'C:/Users/weiya/OneDrive/Desktop/Github/Assembly-AI/Digits/build/vivado/Digits.runs/impl_1/alchitry_top_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:20 ; elapsed = 00:00:14 . Memory (MB): peak = 2097.508 ; gain = 12.719
Command: phys_opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7a35t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a35t'

Starting Initial Update Timing Task

Time (s): cpu = 00:00:14 ; elapsed = 00:00:08 . Memory (MB): peak = 2137.652 ; gain = 40.145
INFO: [Vivado_Tcl 4-383] Design worst setup slack (WNS) is greater than or equal to 0.000 ns. Skipping all physical synthesis optimizations.
INFO: [Vivado_Tcl 4-232] No setup violation found. The netlist was not modified.
INFO: [Common 17-83] Releasing license: Implementation
74 Infos, 0 Warnings, 1 Critical Warnings and 0 Errors encountered.
phys_opt_design completed successfully
phys_opt_design: Time (s): cpu = 00:00:14 ; elapsed = 00:00:08 . Memory (MB): peak = 2137.652 ; gain = 40.145
INFO: [Timing 38-480] Writing timing data to binary archive.
Write ShapeDB Complete: Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.236 . Memory (MB): peak = 2162.980 ; gain = 6.926
Wrote PlaceDB: Time (s): cpu = 00:00:11 ; elapsed = 00:00:05 . Memory (MB): peak = 2163.297 ; gain = 0.316
Wrote PulsedLatchDB: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2163.297 ; gain = 0.000
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Wrote RouteStorage: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.090 . Memory (MB): peak = 2163.297 ; gain = 0.000
Wrote Netlist Cache: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.082 . Memory (MB): peak = 2163.297 ; gain = 0.000
Wrote Device Cache: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.019 . Memory (MB): peak = 2163.297 ; gain = 0.000
Write Physdb Complete: Time (s): cpu = 00:00:11 ; elapsed = 00:00:05 . Memory (MB): peak = 2163.297 ; gain = 7.242
INFO: [Common 17-1381] The checkpoint 'C:/Users/weiya/OneDrive/Desktop/Github/Assembly-AI/Digits/build/vivado/Digits.runs/impl_1/alchitry_top_physopt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:14 ; elapsed = 00:00:09 . Memory (MB): peak = 2163.297 ; gain = 25.645
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7a35t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a35t'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 8 CPUs

Phase 1 Build RT Design
Checksum: PlaceDB: d309d11b ConstDB: 0 ShapeSum: d978a79b RouteDB: 0
Post Restoration Checksum: NetGraph: ebed35e8 | NumContArr: 58af9774 | Constraints: c2a8fa9d | Timing: c2a8fa9d
Phase 1 Build RT Design | Checksum: 2c9eec296

Time (s): cpu = 00:01:23 ; elapsed = 00:01:10 . Memory (MB): peak = 2271.559 ; gain = 87.863

Phase 2 Router Initialization

Phase 2.1 Fix Topology Constraints
Phase 2.1 Fix Topology Constraints | Checksum: 2c9eec296

Time (s): cpu = 00:01:24 ; elapsed = 00:01:10 . Memory (MB): peak = 2271.559 ; gain = 87.863

Phase 2.2 Pre Route Cleanup
Phase 2.2 Pre Route Cleanup | Checksum: 2c9eec296

Time (s): cpu = 00:01:24 ; elapsed = 00:01:10 . Memory (MB): peak = 2271.559 ; gain = 87.863
 Number of Nodes with overlaps = 0

Phase 2.3 Update Timing
Phase 2.3 Update Timing | Checksum: 27af56f0b

Time (s): cpu = 00:01:46 ; elapsed = 00:01:22 . Memory (MB): peak = 2285.570 ; gain = 101.875
INFO: [Route 35-416] Intermediate Timing Summary | WNS=82.874 | TNS=0.000  | WHS=-0.118 | THS=-16.771|


Router Utilization Summary
  Global Vertical Routing Utilization    = 0 %
  Global Horizontal Routing Utilization  = 0 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 18066
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 18066
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 2 Router Initialization | Checksum: 21d3b6f41

Time (s): cpu = 00:01:57 ; elapsed = 00:01:29 . Memory (MB): peak = 2441.488 ; gain = 257.793

Phase 3 Initial Routing

Phase 3.1 Global Routing
Phase 3.1 Global Routing | Checksum: 21d3b6f41

Time (s): cpu = 00:01:58 ; elapsed = 00:01:29 . Memory (MB): peak = 2441.488 ; gain = 257.793

Phase 3.2 Initial Net Routing
Phase 3.2 Initial Net Routing | Checksum: 18cf2dbeb

Time (s): cpu = 00:02:12 ; elapsed = 00:01:33 . Memory (MB): peak = 2441.488 ; gain = 257.793
Phase 3 Initial Routing | Checksum: 18cf2dbeb

Time (s): cpu = 00:02:12 ; elapsed = 00:01:33 . Memory (MB): peak = 2441.488 ; gain = 257.793

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 925
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=76.354 | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.1 Global Iteration 0 | Checksum: 29e3953ee

Time (s): cpu = 00:02:43 ; elapsed = 00:01:48 . Memory (MB): peak = 2441.488 ; gain = 257.793

Phase 4.2 Global Iteration 1
 Number of Nodes with overlaps = 4
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 2
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 2
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=76.354 | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.2 Global Iteration 1 | Checksum: 24c89512b

Time (s): cpu = 00:02:51 ; elapsed = 00:01:53 . Memory (MB): peak = 2441.488 ; gain = 257.793
Phase 4 Rip-up And Reroute | Checksum: 24c89512b

Time (s): cpu = 00:02:51 ; elapsed = 00:01:53 . Memory (MB): peak = 2441.488 ; gain = 257.793

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp
Phase 5.1 Delay CleanUp | Checksum: 24c89512b

Time (s): cpu = 00:02:52 ; elapsed = 00:01:53 . Memory (MB): peak = 2441.488 ; gain = 257.793

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 24c89512b

Time (s): cpu = 00:02:52 ; elapsed = 00:01:53 . Memory (MB): peak = 2441.488 ; gain = 257.793
Phase 5 Delay and Skew Optimization | Checksum: 24c89512b

Time (s): cpu = 00:02:52 ; elapsed = 00:01:53 . Memory (MB): peak = 2441.488 ; gain = 257.793

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 26075224d

Time (s): cpu = 00:02:56 ; elapsed = 00:01:56 . Memory (MB): peak = 2441.488 ; gain = 257.793
INFO: [Route 35-416] Intermediate Timing Summary | WNS=76.362 | TNS=0.000  | WHS=0.196  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 26075224d

Time (s): cpu = 00:02:56 ; elapsed = 00:01:56 . Memory (MB): peak = 2441.488 ; gain = 257.793
Phase 6 Post Hold Fix | Checksum: 26075224d

Time (s): cpu = 00:02:56 ; elapsed = 00:01:56 . Memory (MB): peak = 2441.488 ; gain = 257.793

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 8.75763 %
  Global Horizontal Routing Utilization  = 8.10619 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 26075224d

Time (s): cpu = 00:02:57 ; elapsed = 00:01:56 . Memory (MB): peak = 2441.488 ; gain = 257.793

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 26075224d

Time (s): cpu = 00:02:57 ; elapsed = 00:01:56 . Memory (MB): peak = 2441.488 ; gain = 257.793

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 281cf094d

Time (s): cpu = 00:03:04 ; elapsed = 00:02:01 . Memory (MB): peak = 2441.488 ; gain = 257.793

Phase 10 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=76.362 | TNS=0.000  | WHS=0.196  | THS=0.000  |

INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary.
Phase 10 Post Router Timing | Checksum: 281cf094d

Time (s): cpu = 00:03:07 ; elapsed = 00:02:02 . Memory (MB): peak = 2441.488 ; gain = 257.793
INFO: [Route 35-16] Router Completed Successfully

Phase 11 Post-Route Event Processing
Phase 11 Post-Route Event Processing | Checksum: 199c30c57

Time (s): cpu = 00:03:08 ; elapsed = 00:02:04 . Memory (MB): peak = 2441.488 ; gain = 257.793
Ending Routing Task | Checksum: 199c30c57

Time (s): cpu = 00:03:09 ; elapsed = 00:02:05 . Memory (MB): peak = 2441.488 ; gain = 257.793

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
89 Infos, 0 Warnings, 1 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:03:20 ; elapsed = 00:02:11 . Memory (MB): peak = 2441.488 ; gain = 278.191
INFO: [runtcl-4] Executing : report_drc -file alchitry_top_drc_routed.rpt -pb alchitry_top_drc_routed.pb -rpx alchitry_top_drc_routed.rpx
Command: report_drc -file alchitry_top_drc_routed.rpt -pb alchitry_top_drc_routed.pb -rpx alchitry_top_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 2-168] The results of DRC are in file C:/Users/weiya/OneDrive/Desktop/Github/Assembly-AI/Digits/build/vivado/Digits.runs/impl_1/alchitry_top_drc_routed.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:20 ; elapsed = 00:00:11 . Memory (MB): peak = 2441.488 ; gain = 0.000
INFO: [runtcl-4] Executing : report_methodology -file alchitry_top_methodology_drc_routed.rpt -pb alchitry_top_methodology_drc_routed.pb -rpx alchitry_top_methodology_drc_routed.rpx
Command: report_methodology -file alchitry_top_methodology_drc_routed.rpt -pb alchitry_top_methodology_drc_routed.pb -rpx alchitry_top_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 2 threads
INFO: [Vivado_Tcl 2-1520] The results of Report Methodology are in file C:/Users/weiya/OneDrive/Desktop/Github/Assembly-AI/Digits/build/vivado/Digits.runs/impl_1/alchitry_top_methodology_drc_routed.rpt.
report_methodology completed successfully
report_methodology: Time (s): cpu = 00:00:35 ; elapsed = 00:00:20 . Memory (MB): peak = 2473.359 ; gain = 31.871
INFO: [runtcl-4] Executing : report_power -file alchitry_top_power_routed.rpt -pb alchitry_top_power_summary_routed.pb -rpx alchitry_top_power_routed.rpx
Command: report_power -file alchitry_top_power_routed.rpt -pb alchitry_top_power_summary_routed.pb -rpx alchitry_top_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
99 Infos, 0 Warnings, 1 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:00:32 ; elapsed = 00:00:19 . Memory (MB): peak = 2487.324 ; gain = 13.965
INFO: [runtcl-4] Executing : report_route_status -file alchitry_top_route_status.rpt -pb alchitry_top_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -report_unconstrained -file alchitry_top_timing_summary_routed.rpt -pb alchitry_top_timing_summary_routed.pb -rpx alchitry_top_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
INFO: [runtcl-4] Executing : report_incremental_reuse -file alchitry_top_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-1062] Incremental flow is disabled. No incremental reuse Info to report.
INFO: [runtcl-4] Executing : report_clock_utilization -file alchitry_top_clock_utilization_routed.rpt
INFO: [runtcl-4] Executing : report_bus_skew -warn_on_violation -file alchitry_top_bus_skew_routed.rpt -pb alchitry_top_bus_skew_routed.pb -rpx alchitry_top_bus_skew_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
INFO: [Timing 38-480] Writing timing data to binary archive.
Write ShapeDB Complete: Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.257 . Memory (MB): peak = 2497.477 ; gain = 8.035
Wrote PlaceDB: Time (s): cpu = 00:00:10 ; elapsed = 00:00:05 . Memory (MB): peak = 2497.477 ; gain = 8.035
Wrote PulsedLatchDB: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2497.477 ; gain = 0.000
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Wrote RouteStorage: Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.604 . Memory (MB): peak = 2497.477 ; gain = 0.000
Wrote Netlist Cache: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.084 . Memory (MB): peak = 2497.477 ; gain = 0.000
Wrote Device Cache: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.016 . Memory (MB): peak = 2497.477 ; gain = 0.000
Write Physdb Complete: Time (s): cpu = 00:00:11 ; elapsed = 00:00:05 . Memory (MB): peak = 2497.477 ; gain = 8.035
INFO: [Common 17-1381] The checkpoint 'C:/Users/weiya/OneDrive/Desktop/Github/Assembly-AI/Digits/build/vivado/Digits.runs/impl_1/alchitry_top_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:14 ; elapsed = 00:00:10 . Memory (MB): peak = 2497.477 ; gain = 10.152
Command: write_bitstream -force alchitry_top.bit -bin_file
Attempting to get a license for feature 'Implementation' and/or device 'xc7a35t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a35t'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[0]0 input mlp/forLoop_idx_0_410701040[0].output_layer/out[0]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[10]0 input mlp/forLoop_idx_0_410701040[0].output_layer/out[10]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[11]0 input mlp/forLoop_idx_0_410701040[0].output_layer/out[11]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[12]0 input mlp/forLoop_idx_0_410701040[0].output_layer/out[12]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[14]0 input mlp/forLoop_idx_0_410701040[0].output_layer/out[14]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[15]0 input mlp/forLoop_idx_0_410701040[0].output_layer/out[15]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[2]0 input mlp/forLoop_idx_0_410701040[0].output_layer/out[2]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[3]0 input mlp/forLoop_idx_0_410701040[0].output_layer/out[3]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[4]0 input mlp/forLoop_idx_0_410701040[0].output_layer/out[4]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[5]0 input mlp/forLoop_idx_0_410701040[0].output_layer/out[5]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[6]0 input mlp/forLoop_idx_0_410701040[0].output_layer/out[6]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[7]0 input mlp/forLoop_idx_0_410701040[0].output_layer/out[7]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[9]0 input mlp/forLoop_idx_0_410701040[0].output_layer/out[9]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[10]0 input mlp/forLoop_idx_0_410701040[1].output_layer/out[10]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[11]0 input mlp/forLoop_idx_0_410701040[1].output_layer/out[11]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[12]0 input mlp/forLoop_idx_0_410701040[1].output_layer/out[12]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[13]0 input mlp/forLoop_idx_0_410701040[1].output_layer/out[13]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[14]0 input mlp/forLoop_idx_0_410701040[1].output_layer/out[14]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[1]0 input mlp/forLoop_idx_0_410701040[1].output_layer/out[1]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[2]0 input mlp/forLoop_idx_0_410701040[1].output_layer/out[2]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[3]0 input mlp/forLoop_idx_0_410701040[1].output_layer/out[3]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[4]0 input mlp/forLoop_idx_0_410701040[1].output_layer/out[4]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[5]0 input mlp/forLoop_idx_0_410701040[1].output_layer/out[5]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[6]0 input mlp/forLoop_idx_0_410701040[1].output_layer/out[6]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[7]0 input mlp/forLoop_idx_0_410701040[1].output_layer/out[7]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[8]0 input mlp/forLoop_idx_0_410701040[1].output_layer/out[8]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[9]0 input mlp/forLoop_idx_0_410701040[1].output_layer/out[9]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[0]0 input mlp/forLoop_idx_0_410701040[2].output_layer/out[0]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[10]0 input mlp/forLoop_idx_0_410701040[2].output_layer/out[10]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[12]0 input mlp/forLoop_idx_0_410701040[2].output_layer/out[12]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[14]0 input mlp/forLoop_idx_0_410701040[2].output_layer/out[14]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[15]0 input mlp/forLoop_idx_0_410701040[2].output_layer/out[15]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[2]0 input mlp/forLoop_idx_0_410701040[2].output_layer/out[2]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[3]0 input mlp/forLoop_idx_0_410701040[2].output_layer/out[3]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[5]0 input mlp/forLoop_idx_0_410701040[2].output_layer/out[5]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[6]0 input mlp/forLoop_idx_0_410701040[2].output_layer/out[6]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[8]0 input mlp/forLoop_idx_0_410701040[2].output_layer/out[8]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[0]0 input mlp/forLoop_idx_0_410701040[3].output_layer/out[0]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[10]0 input mlp/forLoop_idx_0_410701040[3].output_layer/out[10]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[12]0 input mlp/forLoop_idx_0_410701040[3].output_layer/out[12]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[14]0 input mlp/forLoop_idx_0_410701040[3].output_layer/out[14]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[15]0 input mlp/forLoop_idx_0_410701040[3].output_layer/out[15]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[1]0 input mlp/forLoop_idx_0_410701040[3].output_layer/out[1]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[2]0 input mlp/forLoop_idx_0_410701040[3].output_layer/out[2]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[4]0 input mlp/forLoop_idx_0_410701040[3].output_layer/out[4]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[5]0 input mlp/forLoop_idx_0_410701040[3].output_layer/out[5]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[6]0 input mlp/forLoop_idx_0_410701040[3].output_layer/out[6]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[4].output_layer/out[10]0 input mlp/forLoop_idx_0_410701040[4].output_layer/out[10]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[4].output_layer/out[12]0 input mlp/forLoop_idx_0_410701040[4].output_layer/out[12]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[4].output_layer/out[13]0 input mlp/forLoop_idx_0_410701040[4].output_layer/out[13]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[4].output_layer/out[14]0 input mlp/forLoop_idx_0_410701040[4].output_layer/out[14]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[4].output_layer/out[1]0 input mlp/forLoop_idx_0_410701040[4].output_layer/out[1]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[4].output_layer/out[3]0 input mlp/forLoop_idx_0_410701040[4].output_layer/out[3]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[4].output_layer/out[9]0 input mlp/forLoop_idx_0_410701040[4].output_layer/out[9]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[5].output_layer/out[0]0 input mlp/forLoop_idx_0_410701040[5].output_layer/out[0]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[5].output_layer/out[10]0 input mlp/forLoop_idx_0_410701040[5].output_layer/out[10]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[5].output_layer/out[13]0 input mlp/forLoop_idx_0_410701040[5].output_layer/out[13]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[5].output_layer/out[14]0 input mlp/forLoop_idx_0_410701040[5].output_layer/out[14]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[5].output_layer/out[2]0 input mlp/forLoop_idx_0_410701040[5].output_layer/out[2]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[5].output_layer/out[6]0 input mlp/forLoop_idx_0_410701040[5].output_layer/out[6]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[5].output_layer/out[8]0 input mlp/forLoop_idx_0_410701040[5].output_layer/out[8]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[6].output_layer/out[11]0 input mlp/forLoop_idx_0_410701040[6].output_layer/out[11]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[6].output_layer/out[13]0 input mlp/forLoop_idx_0_410701040[6].output_layer/out[13]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[6].output_layer/out[14]0 input mlp/forLoop_idx_0_410701040[6].output_layer/out[14]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[6].output_layer/out[3]0 input mlp/forLoop_idx_0_410701040[6].output_layer/out[3]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[6].output_layer/out[4]0 input mlp/forLoop_idx_0_410701040[6].output_layer/out[4]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[6].output_layer/out[5]0 input mlp/forLoop_idx_0_410701040[6].output_layer/out[5]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[6].output_layer/out[7]0 input mlp/forLoop_idx_0_410701040[6].output_layer/out[7]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[6].output_layer/out[9]0 input mlp/forLoop_idx_0_410701040[6].output_layer/out[9]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[7].output_layer/out[14]0 input mlp/forLoop_idx_0_410701040[7].output_layer/out[14]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[7].output_layer/out[15]0 input mlp/forLoop_idx_0_410701040[7].output_layer/out[15]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[7].output_layer/out[1]0 input mlp/forLoop_idx_0_410701040[7].output_layer/out[1]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[7].output_layer/out[2]0 input mlp/forLoop_idx_0_410701040[7].output_layer/out[2]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[7].output_layer/out[3]0 input mlp/forLoop_idx_0_410701040[7].output_layer/out[3]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[7].output_layer/out[4]0 input mlp/forLoop_idx_0_410701040[7].output_layer/out[4]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[7].output_layer/out[8]0 input mlp/forLoop_idx_0_410701040[7].output_layer/out[8]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[7].output_layer/out[9]0 input mlp/forLoop_idx_0_410701040[7].output_layer/out[9]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[8].output_layer/out[10]0 input mlp/forLoop_idx_0_410701040[8].output_layer/out[10]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[8].output_layer/out[14]0 input mlp/forLoop_idx_0_410701040[8].output_layer/out[14]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[8].output_layer/out[2]0 input mlp/forLoop_idx_0_410701040[8].output_layer/out[2]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[8].output_layer/out[5]0 input mlp/forLoop_idx_0_410701040[8].output_layer/out[5]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[8].output_layer/out[7]0 input mlp/forLoop_idx_0_410701040[8].output_layer/out[7]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[9].output_layer/out[0]0 input mlp/forLoop_idx_0_410701040[9].output_layer/out[0]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[9].output_layer/out[10]0 input mlp/forLoop_idx_0_410701040[9].output_layer/out[10]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[9].output_layer/out[12]0 input mlp/forLoop_idx_0_410701040[9].output_layer/out[12]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[9].output_layer/out[13]0 input mlp/forLoop_idx_0_410701040[9].output_layer/out[13]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[9].output_layer/out[14]0 input mlp/forLoop_idx_0_410701040[9].output_layer/out[14]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[9].output_layer/out[15]0 input mlp/forLoop_idx_0_410701040[9].output_layer/out[15]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[9].output_layer/out[2]0 input mlp/forLoop_idx_0_410701040[9].output_layer/out[2]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP mlp/forLoop_idx_0_410701040[9].output_layer/out[9]0 input mlp/forLoop_idx_0_410701040[9].output_layer/out[9]0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[0]0 output mlp/forLoop_idx_0_410701040[0].output_layer/out[0]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[10]0 output mlp/forLoop_idx_0_410701040[0].output_layer/out[10]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[11]0 output mlp/forLoop_idx_0_410701040[0].output_layer/out[11]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[12]0 output mlp/forLoop_idx_0_410701040[0].output_layer/out[12]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[14]0 output mlp/forLoop_idx_0_410701040[0].output_layer/out[14]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[15]0 output mlp/forLoop_idx_0_410701040[0].output_layer/out[15]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[2]0 output mlp/forLoop_idx_0_410701040[0].output_layer/out[2]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[3]0 output mlp/forLoop_idx_0_410701040[0].output_layer/out[3]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[4]0 output mlp/forLoop_idx_0_410701040[0].output_layer/out[4]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[5]0 output mlp/forLoop_idx_0_410701040[0].output_layer/out[5]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[6]0 output mlp/forLoop_idx_0_410701040[0].output_layer/out[6]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[7]0 output mlp/forLoop_idx_0_410701040[0].output_layer/out[7]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[9]0 output mlp/forLoop_idx_0_410701040[0].output_layer/out[9]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[10]0 output mlp/forLoop_idx_0_410701040[1].output_layer/out[10]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[11]0 output mlp/forLoop_idx_0_410701040[1].output_layer/out[11]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[12]0 output mlp/forLoop_idx_0_410701040[1].output_layer/out[12]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[13]0 output mlp/forLoop_idx_0_410701040[1].output_layer/out[13]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[14]0 output mlp/forLoop_idx_0_410701040[1].output_layer/out[14]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[1]0 output mlp/forLoop_idx_0_410701040[1].output_layer/out[1]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[2]0 output mlp/forLoop_idx_0_410701040[1].output_layer/out[2]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[3]0 output mlp/forLoop_idx_0_410701040[1].output_layer/out[3]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[4]0 output mlp/forLoop_idx_0_410701040[1].output_layer/out[4]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[5]0 output mlp/forLoop_idx_0_410701040[1].output_layer/out[5]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[6]0 output mlp/forLoop_idx_0_410701040[1].output_layer/out[6]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[7]0 output mlp/forLoop_idx_0_410701040[1].output_layer/out[7]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[8]0 output mlp/forLoop_idx_0_410701040[1].output_layer/out[8]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[9]0 output mlp/forLoop_idx_0_410701040[1].output_layer/out[9]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[0]0 output mlp/forLoop_idx_0_410701040[2].output_layer/out[0]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[10]0 output mlp/forLoop_idx_0_410701040[2].output_layer/out[10]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[12]0 output mlp/forLoop_idx_0_410701040[2].output_layer/out[12]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[14]0 output mlp/forLoop_idx_0_410701040[2].output_layer/out[14]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[15]0 output mlp/forLoop_idx_0_410701040[2].output_layer/out[15]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[2]0 output mlp/forLoop_idx_0_410701040[2].output_layer/out[2]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[3]0 output mlp/forLoop_idx_0_410701040[2].output_layer/out[3]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[5]0 output mlp/forLoop_idx_0_410701040[2].output_layer/out[5]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[6]0 output mlp/forLoop_idx_0_410701040[2].output_layer/out[6]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[8]0 output mlp/forLoop_idx_0_410701040[2].output_layer/out[8]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[0]0 output mlp/forLoop_idx_0_410701040[3].output_layer/out[0]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[10]0 output mlp/forLoop_idx_0_410701040[3].output_layer/out[10]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[12]0 output mlp/forLoop_idx_0_410701040[3].output_layer/out[12]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[14]0 output mlp/forLoop_idx_0_410701040[3].output_layer/out[14]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[15]0 output mlp/forLoop_idx_0_410701040[3].output_layer/out[15]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[1]0 output mlp/forLoop_idx_0_410701040[3].output_layer/out[1]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[2]0 output mlp/forLoop_idx_0_410701040[3].output_layer/out[2]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[4]0 output mlp/forLoop_idx_0_410701040[3].output_layer/out[4]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[5]0 output mlp/forLoop_idx_0_410701040[3].output_layer/out[5]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[6]0 output mlp/forLoop_idx_0_410701040[3].output_layer/out[6]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[4].output_layer/out[10]0 output mlp/forLoop_idx_0_410701040[4].output_layer/out[10]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[4].output_layer/out[12]0 output mlp/forLoop_idx_0_410701040[4].output_layer/out[12]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[4].output_layer/out[13]0 output mlp/forLoop_idx_0_410701040[4].output_layer/out[13]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[4].output_layer/out[14]0 output mlp/forLoop_idx_0_410701040[4].output_layer/out[14]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[4].output_layer/out[1]0 output mlp/forLoop_idx_0_410701040[4].output_layer/out[1]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[4].output_layer/out[3]0 output mlp/forLoop_idx_0_410701040[4].output_layer/out[3]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[4].output_layer/out[9]0 output mlp/forLoop_idx_0_410701040[4].output_layer/out[9]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[5].output_layer/out[0]0 output mlp/forLoop_idx_0_410701040[5].output_layer/out[0]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[5].output_layer/out[10]0 output mlp/forLoop_idx_0_410701040[5].output_layer/out[10]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[5].output_layer/out[13]0 output mlp/forLoop_idx_0_410701040[5].output_layer/out[13]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[5].output_layer/out[14]0 output mlp/forLoop_idx_0_410701040[5].output_layer/out[14]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[5].output_layer/out[2]0 output mlp/forLoop_idx_0_410701040[5].output_layer/out[2]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[5].output_layer/out[6]0 output mlp/forLoop_idx_0_410701040[5].output_layer/out[6]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[5].output_layer/out[8]0 output mlp/forLoop_idx_0_410701040[5].output_layer/out[8]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[6].output_layer/out[11]0 output mlp/forLoop_idx_0_410701040[6].output_layer/out[11]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[6].output_layer/out[13]0 output mlp/forLoop_idx_0_410701040[6].output_layer/out[13]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[6].output_layer/out[14]0 output mlp/forLoop_idx_0_410701040[6].output_layer/out[14]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[6].output_layer/out[3]0 output mlp/forLoop_idx_0_410701040[6].output_layer/out[3]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[6].output_layer/out[4]0 output mlp/forLoop_idx_0_410701040[6].output_layer/out[4]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[6].output_layer/out[5]0 output mlp/forLoop_idx_0_410701040[6].output_layer/out[5]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[6].output_layer/out[7]0 output mlp/forLoop_idx_0_410701040[6].output_layer/out[7]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[6].output_layer/out[9]0 output mlp/forLoop_idx_0_410701040[6].output_layer/out[9]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[7].output_layer/out[14]0 output mlp/forLoop_idx_0_410701040[7].output_layer/out[14]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[7].output_layer/out[15]0 output mlp/forLoop_idx_0_410701040[7].output_layer/out[15]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[7].output_layer/out[1]0 output mlp/forLoop_idx_0_410701040[7].output_layer/out[1]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[7].output_layer/out[2]0 output mlp/forLoop_idx_0_410701040[7].output_layer/out[2]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[7].output_layer/out[3]0 output mlp/forLoop_idx_0_410701040[7].output_layer/out[3]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[7].output_layer/out[4]0 output mlp/forLoop_idx_0_410701040[7].output_layer/out[4]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[7].output_layer/out[8]0 output mlp/forLoop_idx_0_410701040[7].output_layer/out[8]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[7].output_layer/out[9]0 output mlp/forLoop_idx_0_410701040[7].output_layer/out[9]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[8].output_layer/out[10]0 output mlp/forLoop_idx_0_410701040[8].output_layer/out[10]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[8].output_layer/out[14]0 output mlp/forLoop_idx_0_410701040[8].output_layer/out[14]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[8].output_layer/out[2]0 output mlp/forLoop_idx_0_410701040[8].output_layer/out[2]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[8].output_layer/out[5]0 output mlp/forLoop_idx_0_410701040[8].output_layer/out[5]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[8].output_layer/out[7]0 output mlp/forLoop_idx_0_410701040[8].output_layer/out[7]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[9].output_layer/out[0]0 output mlp/forLoop_idx_0_410701040[9].output_layer/out[0]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[9].output_layer/out[10]0 output mlp/forLoop_idx_0_410701040[9].output_layer/out[10]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[9].output_layer/out[12]0 output mlp/forLoop_idx_0_410701040[9].output_layer/out[12]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[9].output_layer/out[13]0 output mlp/forLoop_idx_0_410701040[9].output_layer/out[13]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[9].output_layer/out[14]0 output mlp/forLoop_idx_0_410701040[9].output_layer/out[14]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[9].output_layer/out[15]0 output mlp/forLoop_idx_0_410701040[9].output_layer/out[15]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[9].output_layer/out[2]0 output mlp/forLoop_idx_0_410701040[9].output_layer/out[2]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[9].output_layer/out[9]0 output mlp/forLoop_idx_0_410701040[9].output_layer/out[9]0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[0]0 multiplier stage mlp/forLoop_idx_0_410701040[0].output_layer/out[0]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[10]0 multiplier stage mlp/forLoop_idx_0_410701040[0].output_layer/out[10]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[11]0 multiplier stage mlp/forLoop_idx_0_410701040[0].output_layer/out[11]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[12]0 multiplier stage mlp/forLoop_idx_0_410701040[0].output_layer/out[12]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[14]0 multiplier stage mlp/forLoop_idx_0_410701040[0].output_layer/out[14]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[15]0 multiplier stage mlp/forLoop_idx_0_410701040[0].output_layer/out[15]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[2]0 multiplier stage mlp/forLoop_idx_0_410701040[0].output_layer/out[2]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[3]0 multiplier stage mlp/forLoop_idx_0_410701040[0].output_layer/out[3]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[4]0 multiplier stage mlp/forLoop_idx_0_410701040[0].output_layer/out[4]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[5]0 multiplier stage mlp/forLoop_idx_0_410701040[0].output_layer/out[5]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[6]0 multiplier stage mlp/forLoop_idx_0_410701040[0].output_layer/out[6]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[7]0 multiplier stage mlp/forLoop_idx_0_410701040[0].output_layer/out[7]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[0].output_layer/out[9]0 multiplier stage mlp/forLoop_idx_0_410701040[0].output_layer/out[9]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[10]0 multiplier stage mlp/forLoop_idx_0_410701040[1].output_layer/out[10]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[11]0 multiplier stage mlp/forLoop_idx_0_410701040[1].output_layer/out[11]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[12]0 multiplier stage mlp/forLoop_idx_0_410701040[1].output_layer/out[12]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[13]0 multiplier stage mlp/forLoop_idx_0_410701040[1].output_layer/out[13]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[14]0 multiplier stage mlp/forLoop_idx_0_410701040[1].output_layer/out[14]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[1]0 multiplier stage mlp/forLoop_idx_0_410701040[1].output_layer/out[1]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[2]0 multiplier stage mlp/forLoop_idx_0_410701040[1].output_layer/out[2]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[3]0 multiplier stage mlp/forLoop_idx_0_410701040[1].output_layer/out[3]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[4]0 multiplier stage mlp/forLoop_idx_0_410701040[1].output_layer/out[4]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[5]0 multiplier stage mlp/forLoop_idx_0_410701040[1].output_layer/out[5]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[6]0 multiplier stage mlp/forLoop_idx_0_410701040[1].output_layer/out[6]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[7]0 multiplier stage mlp/forLoop_idx_0_410701040[1].output_layer/out[7]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[8]0 multiplier stage mlp/forLoop_idx_0_410701040[1].output_layer/out[8]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[1].output_layer/out[9]0 multiplier stage mlp/forLoop_idx_0_410701040[1].output_layer/out[9]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[0]0 multiplier stage mlp/forLoop_idx_0_410701040[2].output_layer/out[0]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[10]0 multiplier stage mlp/forLoop_idx_0_410701040[2].output_layer/out[10]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[12]0 multiplier stage mlp/forLoop_idx_0_410701040[2].output_layer/out[12]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[14]0 multiplier stage mlp/forLoop_idx_0_410701040[2].output_layer/out[14]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[15]0 multiplier stage mlp/forLoop_idx_0_410701040[2].output_layer/out[15]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[2]0 multiplier stage mlp/forLoop_idx_0_410701040[2].output_layer/out[2]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[3]0 multiplier stage mlp/forLoop_idx_0_410701040[2].output_layer/out[3]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[5]0 multiplier stage mlp/forLoop_idx_0_410701040[2].output_layer/out[5]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[6]0 multiplier stage mlp/forLoop_idx_0_410701040[2].output_layer/out[6]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[2].output_layer/out[8]0 multiplier stage mlp/forLoop_idx_0_410701040[2].output_layer/out[8]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[0]0 multiplier stage mlp/forLoop_idx_0_410701040[3].output_layer/out[0]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[10]0 multiplier stage mlp/forLoop_idx_0_410701040[3].output_layer/out[10]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[12]0 multiplier stage mlp/forLoop_idx_0_410701040[3].output_layer/out[12]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[14]0 multiplier stage mlp/forLoop_idx_0_410701040[3].output_layer/out[14]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[15]0 multiplier stage mlp/forLoop_idx_0_410701040[3].output_layer/out[15]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[1]0 multiplier stage mlp/forLoop_idx_0_410701040[3].output_layer/out[1]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[2]0 multiplier stage mlp/forLoop_idx_0_410701040[3].output_layer/out[2]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[4]0 multiplier stage mlp/forLoop_idx_0_410701040[3].output_layer/out[4]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[5]0 multiplier stage mlp/forLoop_idx_0_410701040[3].output_layer/out[5]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[3].output_layer/out[6]0 multiplier stage mlp/forLoop_idx_0_410701040[3].output_layer/out[6]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[4].output_layer/out[10]0 multiplier stage mlp/forLoop_idx_0_410701040[4].output_layer/out[10]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[4].output_layer/out[12]0 multiplier stage mlp/forLoop_idx_0_410701040[4].output_layer/out[12]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[4].output_layer/out[13]0 multiplier stage mlp/forLoop_idx_0_410701040[4].output_layer/out[13]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[4].output_layer/out[14]0 multiplier stage mlp/forLoop_idx_0_410701040[4].output_layer/out[14]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[4].output_layer/out[1]0 multiplier stage mlp/forLoop_idx_0_410701040[4].output_layer/out[1]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[4].output_layer/out[3]0 multiplier stage mlp/forLoop_idx_0_410701040[4].output_layer/out[3]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[4].output_layer/out[9]0 multiplier stage mlp/forLoop_idx_0_410701040[4].output_layer/out[9]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[5].output_layer/out[0]0 multiplier stage mlp/forLoop_idx_0_410701040[5].output_layer/out[0]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[5].output_layer/out[10]0 multiplier stage mlp/forLoop_idx_0_410701040[5].output_layer/out[10]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[5].output_layer/out[13]0 multiplier stage mlp/forLoop_idx_0_410701040[5].output_layer/out[13]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[5].output_layer/out[14]0 multiplier stage mlp/forLoop_idx_0_410701040[5].output_layer/out[14]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[5].output_layer/out[2]0 multiplier stage mlp/forLoop_idx_0_410701040[5].output_layer/out[2]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[5].output_layer/out[6]0 multiplier stage mlp/forLoop_idx_0_410701040[5].output_layer/out[6]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[5].output_layer/out[8]0 multiplier stage mlp/forLoop_idx_0_410701040[5].output_layer/out[8]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[6].output_layer/out[11]0 multiplier stage mlp/forLoop_idx_0_410701040[6].output_layer/out[11]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[6].output_layer/out[13]0 multiplier stage mlp/forLoop_idx_0_410701040[6].output_layer/out[13]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[6].output_layer/out[14]0 multiplier stage mlp/forLoop_idx_0_410701040[6].output_layer/out[14]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[6].output_layer/out[3]0 multiplier stage mlp/forLoop_idx_0_410701040[6].output_layer/out[3]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[6].output_layer/out[4]0 multiplier stage mlp/forLoop_idx_0_410701040[6].output_layer/out[4]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[6].output_layer/out[5]0 multiplier stage mlp/forLoop_idx_0_410701040[6].output_layer/out[5]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[6].output_layer/out[7]0 multiplier stage mlp/forLoop_idx_0_410701040[6].output_layer/out[7]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[6].output_layer/out[9]0 multiplier stage mlp/forLoop_idx_0_410701040[6].output_layer/out[9]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[7].output_layer/out[14]0 multiplier stage mlp/forLoop_idx_0_410701040[7].output_layer/out[14]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[7].output_layer/out[15]0 multiplier stage mlp/forLoop_idx_0_410701040[7].output_layer/out[15]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[7].output_layer/out[1]0 multiplier stage mlp/forLoop_idx_0_410701040[7].output_layer/out[1]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[7].output_layer/out[2]0 multiplier stage mlp/forLoop_idx_0_410701040[7].output_layer/out[2]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[7].output_layer/out[3]0 multiplier stage mlp/forLoop_idx_0_410701040[7].output_layer/out[3]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[7].output_layer/out[4]0 multiplier stage mlp/forLoop_idx_0_410701040[7].output_layer/out[4]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[7].output_layer/out[8]0 multiplier stage mlp/forLoop_idx_0_410701040[7].output_layer/out[8]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[7].output_layer/out[9]0 multiplier stage mlp/forLoop_idx_0_410701040[7].output_layer/out[9]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[8].output_layer/out[10]0 multiplier stage mlp/forLoop_idx_0_410701040[8].output_layer/out[10]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[8].output_layer/out[14]0 multiplier stage mlp/forLoop_idx_0_410701040[8].output_layer/out[14]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[8].output_layer/out[2]0 multiplier stage mlp/forLoop_idx_0_410701040[8].output_layer/out[2]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[8].output_layer/out[5]0 multiplier stage mlp/forLoop_idx_0_410701040[8].output_layer/out[5]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[8].output_layer/out[7]0 multiplier stage mlp/forLoop_idx_0_410701040[8].output_layer/out[7]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[9].output_layer/out[0]0 multiplier stage mlp/forLoop_idx_0_410701040[9].output_layer/out[0]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[9].output_layer/out[10]0 multiplier stage mlp/forLoop_idx_0_410701040[9].output_layer/out[10]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[9].output_layer/out[12]0 multiplier stage mlp/forLoop_idx_0_410701040[9].output_layer/out[12]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[9].output_layer/out[13]0 multiplier stage mlp/forLoop_idx_0_410701040[9].output_layer/out[13]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[9].output_layer/out[14]0 multiplier stage mlp/forLoop_idx_0_410701040[9].output_layer/out[14]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[9].output_layer/out[15]0 multiplier stage mlp/forLoop_idx_0_410701040[9].output_layer/out[15]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[9].output_layer/out[2]0 multiplier stage mlp/forLoop_idx_0_410701040[9].output_layer/out[2]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP mlp/forLoop_idx_0_410701040[9].output_layer/out[9]0 multiplier stage mlp/forLoop_idx_0_410701040[9].output_layer/out[9]0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 270 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Bitstream compression saved 5509472 bits.
Writing bitstream ./alchitry_top.bit...
Writing bitstream ./alchitry_top.bin...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-1876] WebTalk data collection is mandatory when using a ULT device. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-83] Releasing license: Implementation
14 Infos, 270 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:01:31 ; elapsed = 00:01:05 . Memory (MB): peak = 2859.980 ; gain = 362.504
INFO: [Common 17-206] Exiting Vivado at Sat May 17 17:52:24 2025...
