/*
    This file was generated automatically by Alchitry Labs 2.0.34-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module pulse_extender #(
        parameter CLK_FREQ = 27'h5f5e100,
        parameter MIN_PULSE_TIME_NS = 11'h7d0
    ) (
        input wire clk,
        input wire in,
        output reg out
    );
    localparam MIN_PULSE_CYCLES = ($bits(CLK_FREQ)+$bits(MIN_PULSE_TIME_NS))'(CLK_FREQ * MIN_PULSE_TIME_NS) / 30'h3b9aca00;
    logic [($clog2(MIN_PULSE_CYCLES))-1:0] D_ct_d, D_ct_q = 0;
    always @* begin
        D_ct_d = D_ct_q;
        
        out = in || D_ct_q != 1'h0;
        if (D_ct_q == 1'h0) begin
            if (in) begin
                D_ct_d = (($bits(MIN_PULSE_CYCLES) > $bits(1'h1) ? $bits(MIN_PULSE_CYCLES) : $bits(1'h1)) + 1)'(MIN_PULSE_CYCLES - 1'h1);
            end
        end else begin
            D_ct_d = (($bits(D_ct_q) > $bits(1'h1) ? $bits(D_ct_q) : $bits(1'h1)) + 1)'(D_ct_q - 1'h1);
        end
    end
    
    
    always @(posedge (clk)) begin
        D_ct_q <= D_ct_d;
        
    end
endmodule