/*
    This file was generated automatically by Alchitry Labs 2.0.34-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module looping_carry_save #(
        parameter SIZE = 3'h6
    ) (
        input wire clk,
        input wire [(SIZE)-1:0][7:0] array,
        output reg [7:0] out,
        output reg ready
    );
    logic [7:0] D_total_d, D_total_q = 0;
    logic [2:0] D_index_d, D_index_q = 0;
    always @* begin
        D_total_d = D_total_q;
        D_index_d = D_index_q;
        
        out = 1'h0;
        ready = 1'h0;
        if (clk == 1'h1) begin
            D_total_d = (($bits(D_total_q) > $bits(array[D_index_q]) ? $bits(D_total_q) : $bits(array[D_index_q])) + 1)'(D_total_q + array[D_index_q]);
            D_index_d = (($bits(D_index_q) > $bits(1'h1) ? $bits(D_index_q) : $bits(1'h1)) + 1)'(D_index_q + 1'h1);
        end
        if (D_index_q == 3'h6) begin
            ready = 1'h1;
            out = D_total_q;
        end
    end
    
    
    always @(posedge (clk)) begin
        D_total_q <= D_total_d;
        D_index_q <= D_index_d;
        
    end
endmodule